// c++
// time: O(n)
// space: O(1)

class Solution {
public:
  int solve(vector<int>& nums) {
    int n = nums.size();
    int prev = nums[0];
    int prev2 = 0;
    int curr;

    for(int i=1;i<n;i++) {
      int pick = nums[i];
      if(i > 1) pick += prev2;
      int notpick = prev;
      curr = max(pick, notpick);
      prev2 = prev;
      prev = curr;
    }
    return prev;
  }

public:
  int rob(vector<int>& nums) {
    vector<int> temp1, temp2;
    int n = nums.size();
    if(n == 1) return nums[0];
    for(int i=1; i<n ;i++) temp1.push_back(nums[i]);
    for(int i=0; i<n-1 ;i++) temp2.push_back(nums[i]);

    int ans1 = solve(temp1);
    int ans2 = solve(temp2);

    return max(ans1, ans2);
  }
};
