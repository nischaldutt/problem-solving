cpp =>

class Solution {
public:
  int lengthOfLongestSubstring(string s) {
    int result = 0;
    int i = 0;
    int j = 0;
    int len = s.size();
    unordered_map<char, int> myMap;

    while (j < len) {
      if (myMap.find(s[j]) != myMap.end()) i = max(i, myMap[s[j]] + 1);
      myMap[s[j]] = j;
      result = max(result, j - i + 1);
      j++;
    }
    return result;
  }
};


js =>

/**
 * @param {string}
 * @return {number}
 */
var lengthOfLongestSubstring = function(s) {
  let result = 0;
  let i = 0;
  let j = 0;
  const len = s.length;
  const obj = {};

  while(j < len) {
    if(obj[s[j]] !== undefined) i = i > (obj[s[j]] + 1) ? i : (obj[s[j]] + 1);
    obj[s[j]] = j;
    result = result > (j - i + 1) ? result : (j - i + 1);
    j++;
  }
  return result;
};