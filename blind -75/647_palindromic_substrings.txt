// c++
// time: O(n^3)
// space: O(n)

class Solution {
public:
  int t[1001][1001];

  bool solve(string& s, int i, int j) {
    if(t[i][j] != -1) return t[i][j];
    if(i >= j) return t[i][j] = 1;
    if(s[i] == s[j]) return t[i][j] = solve(s, i+1, j-1);
    return t[i][j] = 0;
  }

  int countSubstrings(string s) {
    int n = s.size();
    int count = 0;
    memset(t, -1, sizeof(t));

    for(int i=0;i<n;i++) {
      for(int j=i;j<n;j++) {
        if(solve(s, i, j)) {
          count++;
        }
      }
    }
    return count;
  }
};