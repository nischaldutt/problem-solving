cpp => 

class Solution {
public:
  vector<vector<int>> threeSum(vector<int>& nums) {
    sort(nums.begin(), nums.end());
    vector<vector<int>> result;
    int len = nums.size();
    
    for(int i=0;i<len;i++) {
      if(i > 0 && nums[i] == nums[i-1]) continue;

      int j = i + 1;
      int k = len - 1;
      while(j < k) {
        int sum = nums[i] + nums[j] + nums[k];
        if(sum > 0) k--;
        else if(sum < 0) j++;
        else {
          result.push_back({ nums[i], nums[j], nums[k] });
          j++;
          while(j < k && nums[j] == nums[j - 1]) j++;
        }
      }
    }
    return result;
  }
};

js => 

/**
 * @param {number[]} nums
 * @return {number[][]}
 */
var threeSum = function(nums) {
  nums.sort((a, b) => a - b);
  const result = [];
  const len = nums.length;

  for(let i=0;i<len;i++) {
    if(i > 0 && nums[i] == nums[i-1]) continue;

    let j = i + 1;
    let k = len - 1;
    while(j < k) {
      const sum = nums[i] + nums[j] + nums[k];
      if(sum > 0) k--;
      else if(sum < 0) j++;
      else {
        result.push([nums[i], nums[j], nums[k]]);
        j++;
        while(j < k && nums[j] == nums[j-1]) j++;
      }
    }
  }
  return result;
};