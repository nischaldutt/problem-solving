cpp => 

class Solution {
public:
  int maxProfit(vector<int>& prices) {
    int len = prices.size();
    if(len < 2) return 0;

    int maxProfit = 0;
    int i = 0;
    int j = 1;
    while((i < j) && (j < len)) {
      int profit = prices[j] - prices[i];
      if(profit < 0) i = j;
      else if(profit > 0) maxProfit = max(maxProfit, profit);
      j++;
    }
    return maxProfit;
  }
};

js => 

/**
 * @param {number[]} prices
 * @return {number}
 */
var maxProfit = function(prices) {
  const len = prices.length;
  if(len < 2) return 0;

  let maxProfit = 0;
  let i = 0;
  let j = 1;
  while((i < j) && (j < len)) {
    const profit = prices[j] - prices[i];
    if(profit < 0) i = j;
    else if(profit > 0 ) maxProfit = maxProfit > profit ? maxProfit : profit;
    j++;
  }
  return maxProfit;
};